
// Functions
fn fib(n) {
	if (n <= 1) {
		return n;
	}
	return fib(n - 2) + fib(n - 1);
}

// For loop
for (let i = 0; i < 8; i = i + 1) {
  print fib(i);
}


// Closures
fn makeCounter() {
	let i = 0;

	fn count() {
		i = i + 1;
		print i;
	}

	return count;
}

let counter = makeCounter();
counter();
counter();

let a = "global";
{
  fn showA() {
    print a;
  }

  showA();
  let a = "block";
  showA();
  print a;
}

// Class

class Bacon {
  eat() {
    print "Crunch crunch crunch!";
  }
}

Bacon().eat(); 

// Bound methods
class Cake {
  init(flavor) {
	// this.flavor = flavor;
  }

  taste(adjective) {
    print "The " + this.flavor + " cake is " + adjective + "!";
  }
}

let cake = Cake("German chocolate");
cake.flavor = "German chocolate";
cake.taste("delicious"); // Prints "The German chocolate cake is delicious!".

