
let arr = [1, 2, 3, 4];
print arr;

// Functions
fn fib(n) {
	if (n <= 1) {
		return n;
	}
	return fib(n - 2) + fib(n - 1);
}

// For loop
for (let i = 0; i < 8; i = i + 1) {
  print fib(i);
}


// Closures
fn makeCounter() {
	let i = 0;

	fn count() {
		i = i + 1;
		print i;
	}

	return count;
}

let counter = makeCounter();
counter();
counter();

let a = "global";
{
  fn showA() {
    print a;
  }

  showA();
  let a = "block";
  showA();
  print a;
}

// Class

class Food {
  eat() {
    print "eating some food";
  }
}

// Inheritance
class Bacon extends Food { 
	eat() {
		super.eat();
		print "its bacon";
	}
}

// Bound methods
class Cake extends Bacon {
  init(arg) {
	this.flavor = arg;
  }

  taste(adjective) {
    print "The " + this.flavor + " cake is " + adjective + "!";
  }

  eat() {
  	super.eat();
	print "but it's a cake";
  }
}

let cake = Cake("bacon");
cake.eat();
cake.taste("delicious"); 

// Static methods 
class Math {
	static square(n) {
		return n * n;
	}
}

print Math.square(2);

class Geometry extends Math {}

// Static methods are also inherited
print Geometry.square(2);
